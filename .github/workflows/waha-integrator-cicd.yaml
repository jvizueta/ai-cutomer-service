name: WAHA Integrator CI/CD

on:
  push:
    branches: [ main ]
    paths:
      - 'services/waha-integrator/**'
      - '.github/workflows/waha-integrator-cicd.yaml'
  pull_request:
    branches: [ main ]
    paths:
      - 'services/waha-integrator/**'
      - '.github/workflows/waha-integrator-cicd.yaml'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/waha-integrator

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-waha-integrator-${{ hashFiles('services/waha-integrator/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-waha-integrator-

      - name: Install dependencies
        working-directory: services/waha-integrator
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-asyncio httpx

      - name: Run tests
        working-directory: services/waha-integrator
        run: |
          # Create basic test if none exist
          mkdir -p tests
          if [ ! -f tests/test_main.py ]; then
            cat > tests/test_main.py << 'EOF'
          import pytest
          from fastapi.testclient import TestClient
          from app.main import app

          client = TestClient(app)

          def test_health_check():
              response = client.get("/healthz")
              assert response.status_code == 200
              assert "ok" in response.json()

          def test_root_endpoint():
              response = client.get("/")
              assert response.status_code == 200
              data = response.json()
              assert data["app"] == "WAHA Integrator"
          EOF
          fi
          python -m pytest tests/ -v

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: services/waha-integrator
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy-dev:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop'
    environment: development

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to development
        run: |
          echo "ğŸš€ Deploying WAHA Integrator to development environment"
          echo "Image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:develop"
          # Add actual deployment commands here
          # Example: kubectl set image deployment/waha-integrator waha-integrator=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:develop

  deploy-prod:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    environment: production

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to production
        run: |
          echo "ğŸš€ Deploying WAHA Integrator to production environment"
          echo "Image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest"
          # Add actual deployment commands here
          # Example: kubectl set image deployment/waha-integrator waha-integrator=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest